#include "MathIsFun.h"

/*
 * Calculates the largest integer less or equal than the square root of x.
 * funSqrt(10) = 3
 * funSqrt(16) = 4
 * @param x - An integer for which the function applies
 * @return the value of |_sqrt(x)_|, if x is negative then the function
 * returns -1.
 */
int funSqrt(int x); // ==> Declaration is always in the beginning of the file.

int funPow(int x, int n, int d) {
	if (n == 0)
		return 1;
	if (n == 1)
			return x % d;
	else if ( n % 2 == 0)
	{
		int pow = funPow(x, n/2, d);
		return (pow * pow) % d;
	}
	else
	{
		int pow = funPow(x, (n-1)/2, d);
		return (pow * pow * x) % d;
	}
}

int funSqrt(int x) {
	//Your implementation
	//Declaration + Variabl initializing at the beginning of the function
}

bool funPrimeCheck(int x) {
	//Your implementation
	//Declaration + Variabl initializing at the beginning of the function
}

bool funPalindromeCheck(int x) {
	if (x < 0)
		return false;
	int i = 0;
	while (i < x)
	{
		i *= 10;
	}
}
